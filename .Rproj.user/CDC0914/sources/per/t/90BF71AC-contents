---
title: '2019-03-20'
author: ""
date: "3/20/2019"
output: html_document
---

```{r}
dialogue <- c('小明說："明天不用上課。"',
               '小花說："真的嗎？"')

cat(dialogue, sep="\n")
```



```{r}
dialogue <- c("小明說：'明天不用上課。'",
               "小花說：'真的嗎？'")

cat(dialogue, sep="\n")
```

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r}
aLogical <- c(T,TRUE,F,FALSE,FALSE)
class(aLogical)
xLogical <- c(T,T,T,T,T)

# 加總向量內的所有元素值。
sum(aLogical)
sum(xLogical)
```

```{r}
studentMajors <- factor(
  c("經濟系", "經濟系", "法律系")
)
```

```{r}
typeof(studentMajors)
```
```{r}
birthplace <- factor(
  c("台北市", "台北市", "台中市","台中市","台中市")
)
typeof(birthplace)
levels(birthplace)
as.integer(birthplace)
```

```{r}
stringInteger <- c("1","2","-11")
class(stringInteger) # 無法進行數值運算
trueInteger <- as.integer(stringInteger)
class(trueInteger) # 可以進行數值運算
```
```{r}
stringInteger
trueInteger
```

```{r}
library(lubridate)
dtObject<-ymd_hms("1970-01-01 00:02:53") 
dtObjectVector<-ymd_hms(
  c("1970-01-01 00:02:53",
    "1980-02-11 11:25:22")
)
```
```{r}
class(dtObject)
typeof(dtObject)
levels(dtObject)
as.integer(dtObject)
```
```{r}
Sys.timezone()
```

```{r}
twDateTime <- ymd_hms("2019-03-18 14:04:00", tz="Asia/Taipei")
twDateTime
```
```{r}
LisbonDateTime <- with_tz(twDateTime,tzone="Europe/Lisbon")
LisbonDateTime
```
```{r}
nowtwDateTime <- ymd_hms("2019-03-27 15:32:00", tz="Asia/Taipei")
nowtwDateTime
nowTokyoDateTime <- with_tz(nowtwDateTime,tzone="Asia/Tokyo")
nowTokyoDateTime
```
```{r}
class(nowtwDateTime)
typeof(nowtwDateTime)
as.double(nowtwDateTime)
as.double(nowTokyoDateTime)
```
```{r}
Google <- mdy_hms("3/14/2019 8:18:47", tz="Asia/Taipei")
Google
typeof(Google)
as.double(Google)
```
```{r}
test <- mdy("March 3,2019", tz="Asia/Taipei")
test
```
```{r}
as.integer(test)
as.integer(Google)
```
```{r}
a <- c(1, 5, -3)
b <- c(0.5, 12, 2)
aL <- c(1L, 5L, -3L)
bL <- c(-2L, -4L, 8L)
class(a+bL)
class(aL+bL)
class(a*bL)
class(a-bL)
class(aL*bL)
class(aL-bL)
```
```{r}
a+4
aL+4
class(aL+4L)
```
```{r}
a^b
a %% b
```
```{r}
startingDate <- ymd("2000-02-17")
startingDate + years(1)
startingDate + dyears(1)
```
```{r}
ymd("2000-02-01") -> startingDate
ymd("2019-08-11") -> endingDate
endingDate - startingDate
```
```{r}
test+86400
class(test+86400)
```
```{r}
test+seconds(24)
```
```{r}
x <- 5
y <- 7
x2 <- c(1,5,10)
y2 <- c(-1,5,20)
x>y
x<y
x>=y
x<=y
x==y
```
```{r}
x4 <- c(1,5,8)
y4 <- c(5,8)

x4 %in% y4
x5 <- c("台北市","新北市","高雄市")
y5 <- c("台北市","新北市")

x5 %in% y5
```
```{r}
x2 <- c(NA,NA,10)
y2 <- c(-1,NA,NA)

x3 <- c(NA,"小花")
y3 <- c(NA,"小華")
is.na(x2)
x2==y2
sum(x2)
sum(x2, na.rm=T)
sum(x2, na.rm = F)
```
```{r}
0/0
```

```{r}
library(stringr)
```

```{r}
course <- c("個體經濟學","投資學","總體經濟學")
course
str_subset(course,"經濟學")
str_detect(course,"經濟學")
```

```{r}
studentID<-c(
  '410177115','410176080','410174233','410177011','410182045','410176014')
str_sub(studentID,5,6)
str_sub(studentID,2,4)

```

```{r}
month <- c("3","4","2")
day <- c("11","5","7")
char1 <- c("月","月","月")
char2 <- c("日","日","日")
month
char1
day 
char2
str_c(month,char1,day,char2)
```

```{r}
month
day
str_c(month,day, sep="-")
```

```{r}
dates <- c("3-11", "4-5",  "2-7")
str_split(dates,"-")
```

```{r}
dates2 <- c("3-11-2019", "4-5-2017",  "2-7-2015")
dates2
str_replace(dates2,"-","/")
str_replace_all(dates2,"-","/")
```

```{r}
library(readr)
githubData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/githubData.csv")
username <- githubData$`GitHub username`[11:16]
reponame <- githubData$`GitHub repo name`[11:16]
```

```{r}
a <- str_c(username,reponame,sep = "/")
str_c("https://github.com",a,sep = "/")
```

```{r}
library(readr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/%E7%AC%AC%E4%B8%89%E5%B1%86%E7%B6%93%E6%BF%9F%E6%92%AD%E5%AE%A2%E7%AB%B6%E8%B3%BD%E5%8F%83%E8%B3%BD%E4%BD%9C%E5%93%81%E6%8A%95%E7%A5%A8%E7%B5%90%E6%9E%9C%E6%A8%A3%E6%9C%AC%20-%20Sheet1.csv")
birthday<-filmVotingData$`出生西元年月日（驗證本人用）`
```
```{r}
a <- str_sub(birthday,1,4)
b <- str_sub(birthday,5,6)
c <- str_sub(birthday,7,8)
str_c("西元",a,"年",b,"月",c,"日")
```

```{r}
民國年月<-c("099/01","099/02","099/03")
a <- str_sub(民國年月,1,3)
b <- str_sub(民國年月,4,6)
c <- as.integer(a)+1911
d <- as.character(c)
str_c(d,b)
```

```{r}
aWithNames <- c(
  a1=1,
  a2=2,
  a3=3
)
typeof(a)
aWithNames
```

```{r}
b1<-list("a","b",c(1:10))
typeof(b1)
b1
```
```{r}
plasticContainer <- list(
  greenBox=c("paper","scissor"),     # location 1
  redBox=c(1,3,2.5),               # location 2
  blueBox=c(TRUE,FALSE,TRUE,TRUE)    # location 3
)
plasticContainer[["greenBox"]] 
plasticContainer[[1]]
```

```{r}
plasticContainer[["redBox"]]
plasticContainer[["blueBox"]]
```

```{r}
x <- plasticContainer[["greenBox"]] 
x[[1]]
plasticContainer[["greenBox"]][[1]]
```

```{r}
成績單 <- c(
  個經=90,
  總經=77,
  統計=88
)
成績單[["個經"]]
成績單[[1]]
```

```{r}
studentRecord <-
  list(
    學號="410073058",
    姓名="王小明",
    性別="男",
    學年平均成績=list(
      一年級=88,
      二年級=90.3,
      三年級=92,
      四年級=95
    )
  )

studentRecord[["姓名"]]
studentRecord[["學年平均成績"]][["三年級"]]
```

```{r}
plasticContainer[c("greenBox","redBox")] 
plasticContainer[c(1,2)]
```

```{r}
extract1 <- plasticContainer[c("greenBox")]
extract2 <- plasticContainer[[c("greenBox")]]
extract1[[1]][[1]]
extract2[[1]]
class(extract1)
class(extract2)
```

```{r}
length(plasticContainer)
plasticContainer[c(T,F,T)]
```

```{r}
成績單
成績單[c(FALSE,TRUE,TRUE)]
```

```{r}
your_github_username <- "ArthurGuangTing"
your_practice_reponame <- "107-2-inclass-practice"
library(httr)
library(stringr)
str_replace_all(
  "https://api.github.com/repos/:owner/:repo/commits",
  c(
    ":owner"=your_github_username,
    ":repo"=your_practice_reponame
    )
  ) -> commitCheckStatement
commitCheck <- content(GET(commitCheckStatement))
commitCheckStatement
```

```{r}
commitCheck
```

```{r}
library(readr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/podcastcompetition3.csv")
str_replace(filmVotingData$請選擇你最喜歡的影片二部,", by"," by") -> favoriteTwo
birthday <- filmVotingData$`出生西元年月日（驗證本人用）`
timeStamp <- filmVotingData$Timestamp
```

```{r}
logiCorrect <- str_length(birthday)==8
logiCorrect
```

```{r}
favoriteTwo[logiCorrect]
```

```{r}
class(favoriteTwo)
class(logiCorrect)
```

